import 'package:flutter/material.dart';
import 'package:teb_bar/Screens/call_screen.dart';
import 'package:teb_bar/Screens/chat_screen.dart';
import 'package:teb_bar/Screens/status_screen.dart';
 import 'package:teb_bar/Screens/setting_screen.dart';

import 'package:hexcolor/hexcolor.dart';

class AppScreen extends StatelessWidget {
  const AppScreen({
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return DefaultTabController(
        length: 4,
        initialIndex: 1,
        child: Scaffold(
          appBar: AppBar(

            actions:[
              PopupMenuButton<int>(
                onSelected: (item)=>onSelected(context,item),
                itemBuilder: (context)=>[
                  PopupMenuItem<int>(
                    value:0,
                    child:Text('settings'),
                  ),
                  PopupMenuItem<int>(
                    value:1,
                    child:Text('Tutorial'),
                  ),PopupMenuItem<int>(
                    value:2,
                    child:Text('SETTINGS'),
                  ),
                ],

              ),
            ],

            backgroundColor: HexColor('#885c00'),
            bottom: const TabBar(
              labelStyle: TextStyle(fontSize:20),
              indicatorColor: Colors.amberAccent,
              

              tabs: [
                Tab(icon: Icon(Icons.search),),
                Tab(text: 'Chat',),
                Tab(text: 'Status',),
                Tab(text: 'Call',),
              ],
            ),
            title: const Text('Galexy Messenger'),
          ),
          body: const TabBarView(
            children: [
              Icon(Icons.search ),
              ChatsScreen(),
              StatsScreen(),
              CallScreen(),
            ],
          ),
      
      ),// This trailing comma makes auto-formatting nicer for build methods.
    );
   
  }
   void onSelected(BuildContext context, int item){
        switch (item) {
          case 0:
            Navigator.of(context).push(
              MaterialPageRoute(builder:(context)=>SettingScreen()),
            );
            break;
            case 1:
            showDialog<void>(
              context: context,
              builder: (BuildContext context){
                return AlertDialog(
                  content: SingleChildScrollView(
                    child: ListBody(
                      children: const <Widget>[
                        Text('Swap down the screen to view hidden chats.'),
                        SizedBox(height:10.0),
                        Text('Swap down again to hide them'),
                        SizedBox(height: 10.0),
                        Text('Long Press on the chat to set alias'),
                      ],
                    ),
                  ),
                );
              },
            );
            break;

          default:
        }
      }
}